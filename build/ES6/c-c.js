import{XtallatX}from"./node_modules/xtal-latx/xtal-latx.js";import{BCC}from"./b-c-c.js";export class CC extends BCC{static get is(){return"c-c"}defineProps(name,template,newClass,props,isObj){if(isObj){props.forEach(prop=>{Object.defineProperty(newClass.prototype,prop,{get:function(){return this["_"+prop]},set:function(val){this["_"+prop];this.de(prop,{value:val})},enumerable:!0,configurable:!0})})}else{props.forEach(prop=>{Object.defineProperty(newClass.prototype,prop,{get:function(){return this["_"+prop]},set:function(val){this.attr(prop,val)},enumerable:!0,configurable:!0})})}}defineMethods(newClass,template){const prevSibling=template.previousElementSibling;if(!prevSibling||!prevSibling.dataset.methods)return;const evalScript=eval(prevSibling.innerHTML);for(const fn in evalScript){newClass.prototype[fn]=evalScript[fn]}}addAttributeChangeCallback(newClass){newClass.prototype.attributeChangedCallback=function(name,oldVal,newVal){let val=newVal;const objProps=this.constructor.objProps;if(objProps&&-1<objProps.indexOf(name)){val=JSON.parse(newVal)}this["_"+name]=val;this.de(name,{value:val});if(this.onPropsChange)this.onPropsChange(name,oldVal,val)}}createCE(template){const ceName=this.getCEName(template.id),ds=template.dataset,strPropsAttr=ds.strProps,parsedStrProps=strPropsAttr?strPropsAttr.split(","):[],objPropsAttr=ds.objProps,parsedObjProps=objPropsAttr?objPropsAttr.split(","):[],allProps=parsedStrProps.concat(parsedObjProps);if(this._noshadow){class newClass extends XtallatX(HTMLElement){static getObjProps(){return parsedObjProps}connectedCallback(){this._upgradeProperties(allProps);this._connected=!0;this.appendChild(template.content.cloneNode(!0))}static get observedAttributes(){return allProps}}this.defineProps(ceName,template,newClass,parsedStrProps,!1);this.defineProps(ceName,template,newClass,parsedObjProps,!0);customElements.define(ceName,newClass)}else{class newClass extends XtallatX(HTMLElement){static get objProps(){return parsedObjProps}constructor(){super();this.attachShadow({mode:"open"});this.shadowRoot.appendChild(template.content.cloneNode(!0))}connectedCallback(){this._connected=!0;this._upgradeProperties(allProps)}static get observedAttributes(){return allProps}}this.defineProps(ceName,template,newClass,parsedStrProps,!1);this.defineProps(ceName,template,newClass,parsedObjProps,!0);this.defineMethods(newClass,template);this.addAttributeChangeCallback(newClass);customElements.define(ceName,newClass)}}}if(!customElements.get(CC.is)){customElements.define(CC.is,CC)}