import{XtallatX}from"./node_modules/xtal-latx/xtal-latx.js";import{BCC}from"./b-c-c.js";import{define}from"./node_modules/xtal-latx/define.js";export class CC extends BCC{static get is(){return"c-c"}getCEName(templateId){if(-1<templateId.indexOf("-"))return templateId;return"c-c-"+templateId.split("_").join("-")}connectedCallback(){this.childNodes.forEach(node=>{this._origC.push(node.cloneNode(!0))});this.innerHTML="";super.connectedCallback()}dP(name,template,newClass,props,isObj){if(isObj){props.forEach(prop=>{Object.defineProperty(newClass.prototype,prop,{get:function(){return this["_"+prop]},set:function(val){this["_"+prop]=val;this.de(prop,{value:val})},enumerable:!0,configurable:!0})})}else{props.forEach(prop=>{Object.defineProperty(newClass.prototype,prop,{get:function(){return this["_"+prop]},set:function(val){this.attr(prop,val)},enumerable:!0,configurable:!0})})}}dM(newClass,template){const prevSibling=template.previousElementSibling;if(!prevSibling||!prevSibling.dataset.methods)return;const evalScript=eval(prevSibling.innerHTML);for(const fn in evalScript){newClass.prototype[fn]=evalScript[fn]}}aacc(newClass){newClass.prototype.attributeChangedCallback=function(name,oldVal,newVal){let val=newVal;const objProps=this.constructor.objProps;if(objProps&&-1<objProps.indexOf(name)){val=JSON.parse(newVal)}this["_"+name]=val;this.de(name,{value:val});if(this.onPropsChange)this.onPropsChange(name,oldVal,val)}}gn(){const fromTokens=this._from.split("/"),fromName=fromTokens[0]||fromTokens[1];return this.getCEName(fromName)}sac(){const t=this,aceN=this.gn();for(let i=0,ii=t.children.length;i<ii;i++){const child=t.children[i],style=child.style;if(child.localName===aceN){style.display=child.cc_orgD||"block"}else if("none"!==style.display){if(!child.cc_orgD)child.cc_orgD=child.style.display;child.style.display="none"}}}opc(){if(!this._from||!this._connected||this.disabled)return;const newCEName=this.gn();if(!customElements.get(newCEName)){if(!CC.registering[newCEName]){CC.registering[newCEName]=!0;const template=this.getSrcTempl();if(template.hasAttribute("data-src")&&!template.hasAttribute("loaded")){const mO=new MutationObserver(()=>{this.createCE(template);mO.disconnect()});mO.observe(template,{attributeFilter:["loaded"],attributes:!0})}else{this.createCE(template)}}}if(!this._copy)return;customElements.whenDefined(newCEName).then(()=>{const newEl=this.querySelector(newCEName);if(!newEl){const ce=document.createElement(newCEName);this._origC.forEach(child=>{ce.appendChild(child.cloneNode(!0))});this.appendChild(ce)}this.sac()})}createCE(template){const ceName=this.getCEName(template.id),ds=template.dataset,strPropsAttr=ds.strProps,parsedStrProps=strPropsAttr?strPropsAttr.split(","):[],objPropsAttr=ds.objProps,parsedObjProps=objPropsAttr?objPropsAttr.split(","):[],allProps=parsedStrProps.concat(parsedObjProps);if(this._noshadow){class newClass extends XtallatX(HTMLElement){constructor(){super(...arguments);this._connected=!1}static get is(){return ceName}static getObjProps(){return parsedObjProps}connectedCallback(){this._upgradeProperties(allProps);this._connected=!0;this.appendChild(template.content.cloneNode(!0))}static get observedAttributes(){return allProps}}this.dP(ceName,template,newClass,parsedStrProps,!1);this.dP(ceName,template,newClass,parsedObjProps,!0);define(newClass)}else{class newClass extends XtallatX(HTMLElement){constructor(){super();this._connected=!1;this.attachShadow({mode:"open"});this.shadowRoot.appendChild(template.content.cloneNode(!0))}static get is(){return ceName}static get objProps(){return parsedObjProps}connectedCallback(){this._connected=!0;this._upgradeProperties(allProps)}static get observedAttributes(){return allProps}}this.dP(ceName,template,newClass,parsedStrProps,!1);this.dP(ceName,template,newClass,parsedObjProps,!0);this.dM(newClass,template);this.aacc(newClass);define(newClass)}}}CC.registering={};define(CC);